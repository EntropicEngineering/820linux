From 2e07a52a13ba162af43ca839af79863c5029608d Mon Sep 17 00:00:00 2001
From: Pradeep M <pradeep.m@intrinsyc.com>
Date: Wed, 26 Dec 2018 16:49:05 +0530
Subject: [PATCH 302/334] [8106] i2c-qcom-cci: Recover from i2c errors

Below register write, which is software reset fails.
ov5640_write_reg: error: reg=3008, val=2

After a TIMEOUT from a transaction, the driver calls
cci_halt() leaving the hardware in a state where
no more i2c transactions can happen.

This patch reconfigures the hardware after a timeout.

This patch is originally from below commit.
https://patchwork.ozlabs.org/patch/972690/

Change-Id: I86d017bbe90952b832b915d00998e84517cf2c72
---
 drivers/i2c/busses/i2c-qcom-cci.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/i2c/busses/i2c-qcom-cci.c b/drivers/i2c/busses/i2c-qcom-cci.c
index 143e44d4122b..dbe932dbba02 100644
--- a/drivers/i2c/busses/i2c-qcom-cci.c
+++ b/drivers/i2c/busses/i2c-qcom-cci.c
@@ -144,6 +144,7 @@ struct cci {
 	int nclocks;
 	u16 queue_size[NUM_QUEUES];
 	struct cci_master master[NUM_MASTERS];
+	const struct hw_params *hw;
 };
 
 static const struct cci_res res_v1_0_8 = {
@@ -427,7 +428,8 @@ static int cci_run_queue(struct cci *cci, u8 master, u8 queue)
 			master, queue);
 
 		cci_halt(cci);
-
+		cci_reset(cci);
+		cci_init(cci, cci->hw);
 		return -ETIMEDOUT;
 	}
 
@@ -647,13 +649,13 @@ static int cci_probe(struct platform_device *pdev)
 	strlcpy(cci->adap.name, "Qualcomm Camera Control Interface",
 		sizeof(cci->adap.name));
 
-	mode = I2C_MODE_STANDARD;
+	cci->hw = &hw[I2C_MODE_STANDARD];
 	ret = of_property_read_u32(pdev->dev.of_node, "clock-frequency", &val);
 	if (!ret) {
 		if (val == 400000)
-			mode = I2C_MODE_FAST;
+			cci->hw = &hw[I2C_MODE_FAST];
 		else if (val == 1000000)
-			mode = I2C_MODE_FAST_PLUS;
+			cci->hw = &hw[I2C_MODE_FAST_PLUS];
 	}
 
 	/* Memory */
@@ -730,7 +732,7 @@ static int cci_probe(struct platform_device *pdev)
 	if (ret < 0)
 		goto error;
 
-	ret = cci_init(cci, &hw[mode]);
+	ret = cci_init(cci, cci->hw);
 	if (ret < 0)
 		goto error;
 
-- 
2.24.1

